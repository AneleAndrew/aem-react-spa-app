{"ast":null,"code":"'use strict';\n\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\n\nvar anObject = require('../internals/an-object');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar sameValue = require('../internals/same-value');\n\nvar toString = require('../internals/to-string');\n\nvar regExpExec = require('../internals/regexp-exec-abstract'); // @@search logic\n\n\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [// `String.prototype.search` method\n  // https://tc39.es/ecma262/#sec-string.prototype.search\n  function search(regexp) {\n    var O = requireObjectCoercible(this);\n    var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n    return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\n  }, // `RegExp.prototype[@@search]` method\n  // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n  function (string) {\n    var rx = anObject(this);\n    var S = toString(string);\n    var res = maybeCallNative(nativeSearch, rx, S);\n    if (res.done) return res.value;\n    var previousLastIndex = rx.lastIndex;\n    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n    var result = regExpExec(rx, S);\n    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n    return result === null ? -1 : result.index;\n  }];\n});","map":{"version":3,"sources":["/Users/anele.mzinyati/Documents/repos/aem-react-spa-app/ui.frontend/node_modules/core-js/modules/es.string.search.js"],"names":["fixRegExpWellKnownSymbolLogic","require","anObject","requireObjectCoercible","sameValue","toString","regExpExec","SEARCH","nativeSearch","maybeCallNative","search","regexp","O","searcher","undefined","call","RegExp","string","rx","S","res","done","value","previousLastIndex","lastIndex","result","index"],"mappings":"AAAA;;AACA,IAAIA,6BAA6B,GAAGC,OAAO,CAAC,iDAAD,CAA3C;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAD,6BAA6B,CAAC,QAAD,EAAW,UAAUO,MAAV,EAAkBC,YAAlB,EAAgCC,eAAhC,EAAiD;AACvF,SAAO,CACL;AACA;AACA,WAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,QAAIC,CAAC,GAAGT,sBAAsB,CAAC,IAAD,CAA9B;AACA,QAAIU,QAAQ,GAAGF,MAAM,IAAIG,SAAV,GAAsBA,SAAtB,GAAkCH,MAAM,CAACJ,MAAD,CAAvD;AACA,WAAOM,QAAQ,KAAKC,SAAb,GAAyBD,QAAQ,CAACE,IAAT,CAAcJ,MAAd,EAAsBC,CAAtB,CAAzB,GAAoD,IAAII,MAAJ,CAAWL,MAAX,EAAmBJ,MAAnB,EAA2BF,QAAQ,CAACO,CAAD,CAAnC,CAA3D;AACD,GAPI,EAQL;AACA;AACA,YAAUK,MAAV,EAAkB;AAChB,QAAIC,EAAE,GAAGhB,QAAQ,CAAC,IAAD,CAAjB;AACA,QAAIiB,CAAC,GAAGd,QAAQ,CAACY,MAAD,CAAhB;AACA,QAAIG,GAAG,GAAGX,eAAe,CAACD,YAAD,EAAeU,EAAf,EAAmBC,CAAnB,CAAzB;AAEA,QAAIC,GAAG,CAACC,IAAR,EAAc,OAAOD,GAAG,CAACE,KAAX;AAEd,QAAIC,iBAAiB,GAAGL,EAAE,CAACM,SAA3B;AACA,QAAI,CAACpB,SAAS,CAACmB,iBAAD,EAAoB,CAApB,CAAd,EAAsCL,EAAE,CAACM,SAAH,GAAe,CAAf;AACtC,QAAIC,MAAM,GAAGnB,UAAU,CAACY,EAAD,EAAKC,CAAL,CAAvB;AACA,QAAI,CAACf,SAAS,CAACc,EAAE,CAACM,SAAJ,EAAeD,iBAAf,CAAd,EAAiDL,EAAE,CAACM,SAAH,GAAeD,iBAAf;AACjD,WAAOE,MAAM,KAAK,IAAX,GAAkB,CAAC,CAAnB,GAAuBA,MAAM,CAACC,KAArC;AACD,GAtBI,CAAP;AAwBD,CAzB4B,CAA7B","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar toString = require('../internals/to-string');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeSearch, rx, S);\n\n      if (res.done) return res.value;\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n"]},"metadata":{},"sourceType":"script"}