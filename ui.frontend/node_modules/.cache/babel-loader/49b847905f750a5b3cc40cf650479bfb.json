{"ast":null,"code":"var global = require('../internals/global');\n\nvar toString = require('../internals/to-string');\n\nvar trim = require('../internals/string-trim').trim;\n\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseFloat = global.parseFloat;\nvar FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity; // `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\n\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString(string));\n  var result = $parseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;","map":{"version":3,"sources":["/Users/anele.mzinyati/Documents/repos/aem-react-spa-app/ui.frontend/node_modules/core-js/internals/number-parse-float.js"],"names":["global","require","toString","trim","whitespaces","$parseFloat","parseFloat","FORCED","Infinity","module","exports","string","trimmedString","result","charAt"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,0BAAD,CAAP,CAAoCE,IAA/C;;AACA,IAAIC,WAAW,GAAGH,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAII,WAAW,GAAGL,MAAM,CAACM,UAAzB;AACA,IAAIC,MAAM,GAAG,IAAIF,WAAW,CAACD,WAAW,GAAG,IAAf,CAAf,KAAwC,CAACI,QAAtD,C,CAEA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiBH,MAAM,GAAG,SAASD,UAAT,CAAoBK,MAApB,EAA4B;AACpD,MAAIC,aAAa,GAAGT,IAAI,CAACD,QAAQ,CAACS,MAAD,CAAT,CAAxB;AACA,MAAIE,MAAM,GAAGR,WAAW,CAACO,aAAD,CAAxB;AACA,SAAOC,MAAM,KAAK,CAAX,IAAgBD,aAAa,CAACE,MAAd,CAAqB,CAArB,KAA2B,GAA3C,GAAiD,CAAC,CAAlD,GAAsDD,MAA7D;AACD,CAJsB,GAInBR,WAJJ","sourcesContent":["var global = require('../internals/global');\nvar toString = require('../internals/to-string');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseFloat = global.parseFloat;\nvar FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString(string));\n  var result = $parseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n"]},"metadata":{},"sourceType":"script"}