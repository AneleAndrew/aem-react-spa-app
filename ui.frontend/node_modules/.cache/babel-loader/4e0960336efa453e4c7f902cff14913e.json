{"ast":null,"code":"'use strict';\n\nvar redefine = require('../internals/redefine');\n\nvar anObject = require('../internals/an-object');\n\nvar $toString = require('../internals/to-string');\n\nvar fails = require('../internals/fails');\n\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\nvar NOT_GENERIC = fails(function () {\n  return nativeToString.call({\n    source: 'a',\n    flags: 'b'\n  }) != '/a/b';\n}); // FF44- RegExp#toString has a wrong name\n\nvar INCORRECT_NAME = nativeToString.name != TO_STRING; // `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\n\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, {\n    unsafe: true\n  });\n}","map":{"version":3,"sources":["/Users/anele.mzinyati/Documents/repos/aem-react-spa-app/ui.frontend/node_modules/core-js/modules/es.regexp.to-string.js"],"names":["redefine","require","anObject","$toString","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","toString","R","p","rf","f","undefined","unsafe"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,2BAAD,CAAnB;;AAEA,IAAIK,SAAS,GAAG,UAAhB;AACA,IAAIC,eAAe,GAAGC,MAAM,CAACC,SAA7B;AACA,IAAIC,cAAc,GAAGH,eAAe,CAACD,SAAD,CAApC;AAEA,IAAIK,WAAW,GAAGP,KAAK,CAAC,YAAY;AAAE,SAAOM,cAAc,CAACE,IAAf,CAAoB;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeR,IAAAA,KAAK,EAAE;AAAtB,GAApB,KAAoD,MAA3D;AAAoE,CAAnF,CAAvB,C,CACA;;AACA,IAAIS,cAAc,GAAGJ,cAAc,CAACK,IAAf,IAAuBT,SAA5C,C,CAEA;AACA;;AACA,IAAIK,WAAW,IAAIG,cAAnB,EAAmC;AACjCd,EAAAA,QAAQ,CAACQ,MAAM,CAACC,SAAR,EAAmBH,SAAnB,EAA8B,SAASU,QAAT,GAAoB;AACxD,QAAIC,CAAC,GAAGf,QAAQ,CAAC,IAAD,CAAhB;AACA,QAAIgB,CAAC,GAAGf,SAAS,CAACc,CAAC,CAACJ,MAAH,CAAjB;AACA,QAAIM,EAAE,GAAGF,CAAC,CAACZ,KAAX;AACA,QAAIe,CAAC,GAAGjB,SAAS,CAACgB,EAAE,KAAKE,SAAP,IAAoBJ,CAAC,YAAYT,MAAjC,IAA2C,EAAE,WAAWD,eAAb,CAA3C,GAA2EF,KAAK,CAACO,IAAN,CAAWK,CAAX,CAA3E,GAA2FE,EAA5F,CAAjB;AACA,WAAO,MAAMD,CAAN,GAAU,GAAV,GAAgBE,CAAvB;AACD,GANO,EAML;AAAEE,IAAAA,MAAM,EAAE;AAAV,GANK,CAAR;AAOD","sourcesContent":["'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n"]},"metadata":{},"sourceType":"script"}